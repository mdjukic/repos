BEGIN transaction;
---------------------------------------------------------------------------------------------------
-- Create temp table holding stats, for all webproperty_id's where percentage_to_del >= 20%.....
---------------------------------------------------------------------------------------------------
CREATE TABLE #tmp_mrd_ga_webproperties 
AS
   WITH mrd                            
   AS
        (
         SELECT
                'mrd.ga_webproperties' AS recid
              , webproperty_id         AS webproperty_id
              , COUNT(*)               AS mrd_count
           FROM
                mrd.ga_webproperties
       GROUP BY
                webproperty_id
        )
      , ga AS
        (
         SELECT
                'ga.webproperties' AS recid
              , webproperty_id     AS webproperty_id
              , COUNT(*)           AS ga_count
           FROM
                ga.webproperties
       GROUP BY
                webproperty_id
        )
 SELECT
        recid
      , webproperty_id
      , mrd_count
      , ga_count
      , percentage_to_del
   FROM
        (
         SELECT
                mrd.recid                                         AS recid
              , mrd.webproperty_id                                AS webproperty_id
              , mrd.mrd_count                                     AS mrd_count
              , ga.ga_count                                       AS ga_count
              , (mrd.mrd_count::FLOAT / ga.ga_count::FLOAT) * 100 AS percentage_to_del
           FROM
                mrd
         INNER JOIN
                    ga
                 ON
                    mrd.webproperty_id = ga.webproperty_id
        )
  WHERE
        percentage_to_del >= 20
    ;
 
 DELETE
   FROM
        mrd.ga_webproperties
  USING ga.webproperties
  WHERE
        mrd.ga_webproperties.webproperty_id = ga.webproperties.webproperty_id
    AND 
        0 = (SELECT COUNT(*) FROM #tmp_mrd_ga_webproperties)
    ;
 
INSERT INTO mrd.ga_webproperties
SELECT
    webproperty_id
  , internal_webproperty_id
  , account_id
  , profile_count
  , default_profile_Id
  , industry_vertical
  , webproperty_kind
  , webproperty_level
  , webproperty_name
  , website_url
  , date_created
  , date_updated
  , EXTERNAL_FILE_ID
  , EXTERNAL_FILE_ROWNUMBER
FROM
    (
     SELECT *
          , ROW_NUMBER() Over (
                  PARTITION BY webproperty_id) AS rownum
       FROM
            ga.webproperties
    )
WHERE
      rownum = 1
  AND 
      0 = (SELECT COUNT(*) FROM #tmp_mrd_ga_webproperties)
;

DELETE
FROM
    ga.webproperties
USING mrd.ga_webproperties
WHERE
      mrd.ga_webproperties.webproperty_id = ga.webproperties.webproperty_id
  AND 
      0 = (SELECT COUNT(*) FROM #tmp_mrd_ga_webproperties)
;

END transaction;